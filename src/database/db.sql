CREATE SCHEMA "core";

CREATE TABLE "core"."tenants" (
  "tenant_id" varchar(22) PRIMARY KEY,
  "tenant_sid" INT GENERATED BY DEFAULT AS IDENTITY UNIQUE NOT NULL,
  "tenant_account_type_id" varchar(22) NOT NULL,
  "tenant_name" varchar(34) UNIQUE NOT NULL,
  "tenant_owner_name" varchar(80) UNIQUE NOT NULL,
  "tenant_owner_email" varchar(254) UNIQUE NOT NULL,
  "tenant_owner_phone" varchar(15) UNIQUE NOT NULL,
  "tenant_subscription_id" varchar(22) NOT NULL,
  "tenant_user_id" varchar(22) NOT NULL,
  "status" bool NOT NULL DEFAULT '0',
  "welcome_email_sent" bool NOT NULL DEFAULT '0',
  "account_is_suspended" bool NOT NULL DEFAULT '0',
  "account_is_expired" bool NOT NULL DEFAULT '0',
  "account_subscription_paid" bool DEFAULT '0',
  "api_id" varchar(22) UNIQUE,
  "management_api_key" varchar(34) UNIQUE,
  "delivery_api_key" varchar(24) UNIQUE,
  "created_by" varchar(80) NOT NULL,
  "created_on" TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  "modified_on" TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  "modified_by" varchar(80) NOT NULL
);

CREATE TABLE "core"."tenant_subscriptions" (
  "tenant_subscription_id" varchar(22) PRIMARY KEY,
  "tenant_subscription_sid" INT GENERATED BY DEFAULT AS IDENTITY,
  "tenant_id" varchar(22),
  "subscription_name" varchar(80),
  "subscription_entitlements" json NOT NULL,
  "subscription_status" bool NOT NULL,
  "is_trial_subscription" bool DEFAULT 0,
  "created_by" varchar(80) NOT NULL,
  "created_on" TIMESTAMP NOT NULL DEFAULT 'now()',
  "modified_on" TIMESTAMP NOT NULL DEFAULT 'now()',
  "modified_by" varchar(80) NOT NULL
);

CREATE TABLE "core"."tenant_settings" (
  "tenant_setting_id" varchar(22) PRIMARY KEY,
  "tenant_setting_sid" INT GENERATED BY DEFAULT AS IDENTITY,
  "tenant_id" varchar(22),
  "tenant_academic_year_id" varchar(22),
  "tenant_academic_semester_id" varchar(22),
  "finance_settings" varchar(22),
  "finance_bank_settings" varchar(22),
  "finance_bank_account_settings" varchar(22),
  "finance_payment_type_settings" varchar(22),
  "finance_payment_method_settings" varchar(22),
  "tenant_college_settings" varchar(22),
  "college_campus_location_settings" varchar(22),
  "signature_settings" varchar(22),
  "faculty_settings" varchar(22),
  "department_settings" varchar(22),
  "branding_logo" varchar(254),
  "branding_neutal_color_background" varchar(10) DEFAULT '#EFF4FB',
  "branding_neutal_color_sections" varchar(10) DEFAULT ' #E2E8F0',
  "branding_neutal_color_text" varchar(10) DEFAULT '#212B36',
  "branding_primary_color" varchar(10) DEFAULT '#3C50E0',
  "branding_secondary_color" varchar(10) DEFAULT '#DC3545',
  "branding_accent_color" varchar(10) DEFAULT '#10B981',
  "branding_semantic_color_success" varchar(10) DEFAULT '#E1F9F0',
  "branding_semantic_color_warning" varchar(10) DEFAULT '#FEF5DE',
  "branding_semantic_color_error" varchar(10) DEFAULT '#FEEAEA',
  "branding_semantic_color_info" varchar(10) DEFAULT '#3C50E0',
  "custom_staff_domain_name" varchar(254),
  "custom_lecturer_domain_name" varchar(254),
  "custom_prospective_student_domain_name" varchar(254),
  "custom_current_student_domain_name" varchar(254),
  "custom_crm_domain_name" varchar(254),
  "custom_lms_domain_name" varchar(254),
  "custom_hrmo_domain_name" varchar(254),
  "custom_reports_domain_name" varchar(254),
  "custom_support_center_domain_name" varchar(254),
  "custom_asset_mgmt_domain_name" varchar(254),
  "custom_library_domain_name" varchar(254),
  "custom_finance_domain_name" varchar(254),
  "custom_website_domain_name" varchar(254),
  "email_setting_id" varchar(22),
  "sms_setting_id" varchar(22),
  "whatsapp_setting_id" varchar(22),
  "social_setting_id" varchar(22),
  "api_access_setting_id" varchar(22),
  "country_id" varchar(22),
  "timezone" text DEFAULT 'UTC',
  "language_code" varchar(12) DEFAULT 'en-sl',
  "currency" text DEFAULT 'SLE',
  "created_by" varchar(80) NOT NULL,
  "created_on" TIMESTAMP NOT NULL DEFAULT 'now()',
  "modified_on" TIMESTAMP NOT NULL DEFAULT 'now()',
  "modified_by" varchar(80) NOT NULL
);

CREATE TABLE "core"."tenant_data" (
  "tenant_data_id" varchar(22) PRIMARY KEY,
  "tenant_data_sid" INT GENERATED BY DEFAULT AS IDENTITY UNIQUE NOT NULL,
  "tenant_id" varchar(22),
  "long_name" varchar(256) NOT NULL,
  "legal_name" varchar(256) NOT NULL,
  "government_registration_id" varchar(256) UNIQUE,
  "government_alternate_registration_id" varchar(256),
  "education_category" varchar(80) NOT NULL,
  "education_classification" varchar(80),
  "education_affiliation" varchar(80),
  "education_association" varchar(80),
  "education_lowest_grade_level" varchar(40) NOT NULL,
  "education_highest_grade_level" varchar(40) NOT NULL,
  "date_founded" date,
  "description" text,
  "website" text,
  "created_by" varchar(80) NOT NULL,
  "created_on" TIMESTAMP NOT NULL DEFAULT 'now()',
  "modified_on" TIMESTAMP NOT NULL DEFAULT 'now()',
  "modified_by" varchar(80) NOT NULL
);

CREATE TABLE "core"."contacts" (
  "contact_id" varchar(22) PRIMARY KEY,
  "contact_sid" INT GENERATED BY DEFAULT AS IDENTITY UNIQUE NOT NULL,
  "tenant_id" varchar(22),
  "contact_type" varchar(22),
  "Contact_name" varchar(22),
  "first_name" varchar(22),
  "middle_name" varchar(22),
  "last_name" varchar(22),
  "designation" varchar(22),
  "gender" varchar(22),
  "company_name" varchar(22),
  "contact_email_id" varchar(22) NOT NULL,
  "contact_phone_id" varchar(22) NOT NULL,
  "contact_address_id" varchar(22) NOT NULL,
  "contact_social_id" varchar(22) NOT NULL,
  "is_primary_contact" bool NOT NULL DEFAULT '0',
  "is_billing_contact" bool NOT NULL DEFAULT '0',
  "is_registrar_contact" bool NOT NULL DEFAULT '0',
  "is_finance_contact" bool NOT NULL DEFAULT '0',
  "is_vc_contact" bool NOT NULL DEFAULT '0',
  "is_vcp_contact" bool NOT NULL DEFAULT '0',
  "is_dvcp_contact" bool NOT NULL DEFAULT '0',
  "is_ictd_contact" bool NOT NULL DEFAULT '0',
  "Status" varchar(15),
  "comment" text,
  "created_by" varchar(80) NOT NULL,
  "created_on" TIMESTAMP NOT NULL DEFAULT 'now()',
  "modified_on" TIMESTAMP NOT NULL DEFAULT 'now()',
  "modified_by" varchar(80) NOT NULL
);

CREATE TABLE "core"."contacts_email" (
  "contact_email_id" varchar(22) PRIMARY KEY,
  "contact_email_sid" INT GENERATED BY DEFAULT AS IDENTITY UNIQUE NOT NULL,
  "tenant_id" varchar(22),
  "contact_id" varchar(22),
  "email_type" text NOT NULL,
  "email_name" text NOT NULL,
  "tenant_main_email" TEXT UNIQUE,
  "created_by" varchar(80) NOT NULL,
  "created_on" TIMESTAMP NOT NULL DEFAULT 'now()',
  "modified_on" TIMESTAMP NOT NULL DEFAULT 'now()',
  "modified_by" varchar(80) NOT NULL
);

CREATE TABLE "core"."contacts_phone" (
  "contact_phone_id" varchar(22) PRIMARY KEY,
  "contact_phone_sid" INT GENERATED BY DEFAULT AS IDENTITY UNIQUE NOT NULL,
  "tenant_id" varchar(22),
  "contact_id" varchar(22),
  "phone_type" text NOT NULL,
  "phone_name" text NOT NULL,
  "tenant_main_phone" TEXT,
  "created_by" varchar(80) NOT NULL,
  "created_on" TIMESTAMP NOT NULL DEFAULT 'now()',
  "modified_on" TIMESTAMP NOT NULL DEFAULT 'now()',
  "modified_by" varchar(80) NOT NULL
);

CREATE TABLE "core"."contacts_address" (
  "contact_address_id" varchar(22) PRIMARY KEY,
  "contact_address_sid" INT GENERATED BY DEFAULT AS IDENTITY UNIQUE NOT NULL,
  "tenant_id" varchar(22),
  "contact_id" varchar(22),
  "address_type" varchar(40) NOT NULL,
  "address_name" varchar(40) NOT NULL,
  "address_country" varchar(40) NOT NULL,
  "address_state" varchar(40),
  "address_region" varchar(40),
  "address_district" varchar(40),
  "address_address_line1" varchar(80) NOT NULL,
  "address_address_line2" varchar(80),
  "address_city" varchar(40) NOT NULL,
  "address_postal_code" varchar(10),
  "address_latitude" double,
  "address_longitude" double,
  "created_by" varchar(80) NOT NULL,
  "created_on" TIMESTAMP NOT NULL DEFAULT 'now()',
  "modified_on" TIMESTAMP NOT NULL DEFAULT 'now()',
  "modified_by" varchar(80) NOT NULL
);

CREATE TABLE "core"."contacts_social" (
  "contact_social_id" varchar(22) PRIMARY KEY,
  "contact_social_sid" INT GENERATED BY DEFAULT AS IDENTITY UNIQUE NOT NULL,
  "tenant_id" varchar(22),
  "contact_id" varchar(22),
  "social_type" varchar(40) NOT NULL,
  "social_name" varchar(40) NOT NULL,
  "social_link" varchar(254),
  "created_by" varchar(80) NOT NULL,
  "created_on" TIMESTAMP NOT NULL DEFAULT 'now()',
  "modified_on" TIMESTAMP NOT NULL DEFAULT 'now()',
  "modified_by" varchar(80) NOT NULL
);

CREATE TABLE "core"."users" (
  "user_id" varchar(22) PRIMARY KEY,
  "user_sid" INT GENERATED BY DEFAULT AS IDENTITY,
  "tenant_id" varchar(22),
  "user_type_id" varchar(22),
  "language_code" varchar(35) DEFAULT 'en',
  "timezone" varchar(15) DEFAULT 'UTC',
  "display_name" evarchar(80),
  "nice_name" varchar(80),
  "username" varchar(80) UNIQUE,
  "email" varchar(254) UNIQUE,
  "primary_phone" varchar(15) UNIQUE,
  "password" varchar(80) NOT NULL,
  "password_status" int DEFAULT '0',
  "status" bool DEFAULT '0',
  "photo" varchar(22),
  "is_verified" bool DEFAULT '0',
  "user_payment_id" varchar(22),
  "is_using_bank_pin" bool DEFAULT '0',
  "is_using_bank_voucher" bool DEFAULT '0',
  "is_paying_online" bool DEFAULT '0',
  "paid_for_application" bool DEFAULT '0',
  "paid_admission_acceptance_fees" bool DEFAULT '0',
  "can_access_portal" bool DEFAULT '1',
  "is_deleted" bool DEFAULT '0',
  "is_spam" bool DEFAULT '0',
  "created_by" varchar(80) NOT NULL,
  "created_on" TIMESTAMP NOT NULL DEFAULT 'now()',
  "modified_on" TIMESTAMP NOT NULL DEFAULT 'now()',
  "modified_by" varchar(80) NOT NULL
);

CREATE TABLE "core"."user_data" (
  "user_data_id" varchar(22) PRIMARY KEY,
  "user_data_sid" SERIAL,
  "user_id" varchar(22),
  "tenant_id" varchar(22),
  "name_prefix" text,
  "full_name" text NOT NULL,
  "first_name" text NOT NULL,
  "middle_name" text,
  "last_name" text NOT NULL,
  "name_suffix" text,
  "national_id_number" text,
  "other_government_id_numer" text,
  "uploaded_id_photo" text,
  "secondary_phone" text UNIQUE,
  "secondary_email" text,
  "demographic_gender" text,
  "demographic_marital_status" text,
  "demographic_date_of_birth" date,
  "demographic_country_of_birth" text,
  "demographic_nationality" text,
  "demographic_is_disabled" bool,
  "demographic_disability_status" text,
  "address_name" text NOT NULL,
  "address_type" text NOT NULL,
  "address_country" text NOT NULL,
  "address_state" text,
  "address_region" text,
  "address_district" text,
  "address_address_line1" text NOT NULL,
  "address_address_line2" text,
  "address_city" text NOT NULL,
  "address_postal_code" text,
  "address_latitude" double,
  "address_longitude" double,
  "created_by" varchar(80) NOT NULL,
  "created_on" TIMESTAMP NOT NULL DEFAULT 'now()',
  "modified_on" TIMESTAMP NOT NULL DEFAULT 'now()',
  "modified_by" varchar(80) NOT NULL
);

CREATE TABLE "core"."user_settings" (
  "user_setting_id" varchar(22) PRIMARY KEY,
  "user_setting_sid" SERIAL,
  "user_id" varchar(22),
  "tenant_id" varchar(22),
  "module" text,
  "permission_name" text,
  "permission_value" text,
  "serialized" bool,
  "created_by" varchar(80) NOT NULL,
  "created_on" TIMESTAMP NOT NULL DEFAULT 'now()',
  "modified_on" TIMESTAMP NOT NULL DEFAULT 'now()',
  "modified_by" varchar(80) NOT NULL
);

CREATE TABLE "core"."roles" (
  "role_id" varchar(22),
  "role_sid" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "tenant_id" varchar(22),
  "name" text UNIQUE,
  "created_by" varchar(80) NOT NULL,
  "created_on" TIMESTAMP NOT NULL DEFAULT 'now()',
  "modified_on" TIMESTAMP NOT NULL DEFAULT 'now()',
  "modified_by" varchar(80) NOT NULL
);

CREATE TABLE "core"."user_roles" (
  "user_role_id" varchar(22),
  "user_role_sid" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "role_id" varchar(22),
  "tenant_id" varchar(22),
  "user_id" varchar(22),
  "created_by" varchar(80) NOT NULL,
  "created_on" TIMESTAMP NOT NULL DEFAULT 'now()',
  "modified_on" TIMESTAMP NOT NULL DEFAULT 'now()',
  "modified_by" varchar(80) NOT NULL,
  PRIMARY KEY ("user_id", "user_role_id")
);

CREATE TABLE "core"."user_auths" (
  "user_auth_id" varchar(22) PRIMARY KEY,
  "user_auth_sid" INT GENERATED BY DEFAULT AS IDENTITY,
  "user_id" varchar(22),
  "tenant_id" varchar(22),
  "otp" text,
  "otp_expiry" timestamp,
  "last_login_at" timestamp,
  "last_login_ip" text,
  "created_by" varchar(80) NOT NULL,
  "created_on" TIMESTAMP NOT NULL DEFAULT 'now()',
  "modified_on" TIMESTAMP NOT NULL DEFAULT 'now()',
  "modified_by" varchar(80) NOT NULL
);

CREATE TABLE "core"."user_payments" (
  "user_payment_id" varchar(22) PRIMARY KEY,
  "user_payment_sid" INT GENERATED BY DEFAULT AS IDENTITY,
  "user_id" varchar(22),
  "tenant_id" varchar(22),
  "payment_type" text,
  "payment_method" text,
  "payment_details" text,
  "created_by" varchar(80) NOT NULL,
  "created_on" TIMESTAMP NOT NULL DEFAULT 'now()',
  "modified_on" TIMESTAMP NOT NULL DEFAULT 'now()',
  "modified_by" varchar(80) NOT NULL
);

CREATE TABLE "core"."settings" (
  "setting_id" varchar(22),
  "setting_sid" INT GENERATED BY DEFAULT AS IDENTITY,
  "tenant_id" varchar(22),
  "tenant_setting_id" varchar(22),
  "use_custom_domain_name" bool,
  "custom_primary_domain_name" varchar(254),
  "vat_rate" decimal(18),
  "vat_registration" varchar(450),
  "footer_msg" varchar(250),
  "created_by" varchar(80) NOT NULL,
  "created_on" TIMESTAMP NOT NULL DEFAULT 'now()',
  "modified_on" TIMESTAMP NOT NULL DEFAULT 'now()',
  "modified_by" varchar(80) NOT NULL,
  PRIMARY KEY ("setting_id", "tenant_id")
);

CREATE TABLE "core"."tenant_colleges" (
  "college_id" varchar(22),
  "college_sid" INT GENERATED BY DEFAULT AS IDENTITY,
  "tenant_id" varchar(22),
  "college_name" varchar(254),
  "short_name" varchar(80),
  "contact_email_id" varchar(22) NOT NULL,
  "contact_phone_id" varchar(22) NOT NULL,
  "contact_address_id" varchar(22) NOT NULL,
  "contact_social_id" varchar(22) NOT NULL,
  "website" varchar(200),
  "college_logo" varchar(254),
  "qr_code" varchar(254),
  "chancellor_signature" varchar(254),
  "registrar_signature" varchar(254),
  "college_seal" varchar(254),
  "card_bg" varchar(254),
  "student_id_format" varchar(50),
  "created_by" varchar(80) NOT NULL,
  "created_on" TIMESTAMP NOT NULL DEFAULT 'now()',
  "modified_on" TIMESTAMP NOT NULL DEFAULT 'now()',
  "modified_by" varchar(80) NOT NULL,
  PRIMARY KEY ("college_id", "tenant_id")
);

CREATE TABLE "core"."college_campus_locations" (
  "college_campus_id" varchar(22),
  "college_campus_sid" INT GENERATED BY DEFAULT AS IDENTITY,
  "college_id" varchar(22),
  "tenant_id" varchar(22),
  "campus_name" varchar(254),
  "program_type" varchar(80),
  "created_by" varchar(80) NOT NULL,
  "created_on" TIMESTAMP NOT NULL DEFAULT 'now()',
  "modified_on" TIMESTAMP NOT NULL DEFAULT 'now()',
  "modified_by" varchar(80) NOT NULL,
  PRIMARY KEY ("college_campus_id", "tenant_id")
);

CREATE TABLE "core"."signatures" (
  "signature_id" varchar(22) PRIMARY KEY,
  "signature_sid" INT GENERATED BY DEFAULT AS IDENTITY,
  "college_id" varchar(22),
  "faculty_id" varchar(22),
  "college_campus_id" varchar(22),
  "tenant_id" varchar(22),
  "program_type" varchar(22),
  "academic_year" varchar(22),
  "signature_type" varchar(50),
  "signature_file" varchar(254),
  "signatory_name" varchar(254),
  "signatory_position" varchar(250),
  "created_by" varchar(80) NOT NULL,
  "created_on" TIMESTAMP NOT NULL DEFAULT 'now()',
  "modified_on" TIMESTAMP NOT NULL DEFAULT 'now()',
  "modified_by" varchar(80) NOT NULL
);

CREATE TABLE "core"."faculties" (
  "faculty_id" varchar(22) PRIMARY KEY,
  "faculty_sid" INT GENERATED BY DEFAULT AS IDENTITY,
  "college_id" varchar(22),
  "tenant_id" varchar(22),
  "internal_faculty_ref_id" varchar(22),
  "faculty_name" varchar(254),
  "created_by" varchar(80) NOT NULL,
  "created_on" TIMESTAMP NOT NULL DEFAULT 'now()',
  "modified_on" TIMESTAMP NOT NULL DEFAULT 'now()',
  "modified_by" varchar(80) NOT NULL
);

CREATE TABLE "core"."departments" (
  "department_id" varchar(22) PRIMARY KEY,
  "department_sid" INT GENERATED BY DEFAULT AS IDENTITY,
  "college_id" varchar(22),
  "faculty_id" varchar(22),
  "tenant_id" varchar(22),
  "internal_department_ref_id" varchar(22),
  "department_name" varchar(254),
  "created_by" varchar(80) NOT NULL,
  "created_on" TIMESTAMP NOT NULL DEFAULT 'now()',
  "modified_on" TIMESTAMP NOT NULL DEFAULT 'now()',
  "modified_by" varchar(80) NOT NULL
);

CREATE TABLE "core"."finance_settings" (
  "finance_setting_id" varchar(22),
  "finance_setting_sid" INT GENERATED BY DEFAULT AS IDENTITY,
  "tenant_id" varchar(22),
  "created_by" varchar(80) NOT NULL,
  "created_on" TIMESTAMP NOT NULL DEFAULT 'now()',
  "modified_on" TIMESTAMP NOT NULL DEFAULT 'now()',
  "modified_by" varchar(80) NOT NULL,
  PRIMARY KEY ("finance_setting_id", "tenant_id")
);

CREATE TABLE "core"."finance_bank_accounts" (
  "bank_account_id" varchar(22) PRIMARY KEY,
  "bank_account_sid" INT GENERATED BY DEFAULT AS IDENTITY,
  "tenant_id" varchar(22),
  "bank_name_id" varchar(22),
  "full_address" varchar,
  "contact_person" varchar,
  "phone_number" varchar,
  "email_address" varchar,
  "account_name" varchar,
  "account_number" varchar,
  "status" bool,
  "college_id" varchar(22),
  "bank_api_key" varchar(22),
  "bank_secret_code" varchar(22),
  "created_by" varchar(80) NOT NULL,
  "created_on" TIMESTAMP NOT NULL DEFAULT 'now()',
  "modified_on" TIMESTAMP NOT NULL DEFAULT 'now()',
  "modified_by" varchar(80) NOT NULL
);

CREATE TABLE "core"."finance_banks" (
  "bank_id" varchar(22) PRIMARY KEY,
  "bank_sid" INT GENERATED BY DEFAULT AS IDENTITY,
  "tenant_id" varchar(22),
  "bank_name" varchar(22),
  "bank_secret_code" varchar(22),
  "status" bool,
  "bank_token" varchar(22),
  "bank_ip_address" varchar(254),
  "bank_email" varchar(254),
  "allow_extramural" bool,
  "created_by" varchar(80) NOT NULL,
  "created_on" TIMESTAMP NOT NULL DEFAULT 'now()',
  "modified_on" TIMESTAMP NOT NULL DEFAULT 'now()',
  "modified_by" varchar(80) NOT NULL,
  PRIMARY KEY ("bank_id", "bank_sid", "tenant_id")
);

CREATE TABLE "core"."finance_payments" (
  "payment_id" varchar(22) PRIMARY KEY,
  "payment_sid" INT GENERATED BY DEFAULT AS IDENTITY,
  "tenant_id" varchar(22),
  "user_id" varchar(22),
  "payment_type" varchar(22),
  "payment_academic_year" varchar(22),
  "payment_method" varchar(22),
  "created_by" varchar(80) NOT NULL,
  "created_on" TIMESTAMP NOT NULL DEFAULT 'now()',
  "modified_on" TIMESTAMP NOT NULL DEFAULT 'now()',
  "modified_by" varchar(80) NOT NULL
);

CREATE TABLE "core"."finance_payment_types" (
  "payment_type_id" varchar(22) PRIMARY KEY,
  "payment_type_sid" INT GENERATED BY DEFAULT AS IDENTITY,
  "tenant_id" varchar(22),
  "user_id" varchar(22),
  "payment_type_name" varchar(22),
  "payment_id" varchar(22),
  "created_by" varchar(80) NOT NULL,
  "created_on" TIMESTAMP NOT NULL DEFAULT 'now()',
  "modified_on" TIMESTAMP NOT NULL DEFAULT 'now()',
  "modified_by" varchar(80) NOT NULL
);

CREATE TABLE "core"."finance_payment_methods" (
  "payment_method_id" varchar(22) PRIMARY KEY,
  "payment_method_sid" INT GENERATED BY DEFAULT AS IDENTITY,
  "tenant_id" varchar(22),
  "user_id" varchar(22),
  "payment_method_name" varchar(22),
  "payment_id" varchar(22),
  "created_by" varchar(80) NOT NULL,
  "created_on" TIMESTAMP NOT NULL DEFAULT 'now()',
  "modified_on" TIMESTAMP NOT NULL DEFAULT 'now()',
  "modified_by" varchar(80) NOT NULL
);

CREATE TABLE "core"."finance_bank_vouchers" (
  "payment_bank_voucher_id" varchar(22) PRIMARY KEY,
  "payment_bank_voucher_sid" INT GENERATED BY DEFAULT AS IDENTITY,
  "tenant_id" varchar(22),
  "payment_id" varchar(22),
  "payment_method_id" varchar(22),
  "user_id" varchar(22),
  "applicant_full_name" varchar(80),
  "phone_number" varchar(50),
  "email_address" varchar(150),
  "voucher_number" varchar(22),
  "receipt_number" varchar(80),
  "finance_role" varchar(80),
  "created_by" varchar(80) NOT NULL,
  "created_on" TIMESTAMP NOT NULL DEFAULT 'now()',
  "modified_on" TIMESTAMP NOT NULL DEFAULT 'now()',
  "modified_by" varchar(80) NOT NULL
);

CREATE TABLE "core"."finance_bank_pins" (
  "payment_bank_ping_id" varchar(22) PRIMARY KEY,
  "payment_bank_pin_sid" INT GENERATED BY DEFAULT AS IDENTITY,
  "tenant_id" varchar(22),
  "payment_id" varchar(22),
  "payment_method_id" varchar(22),
  "user_id" varchar(22),
  "finance_username" varchar(80),
  "finance_password" varchar(80),
  "finance_password_status" bool DEFAULT '1',
  "finance_role" varchar(80),
  "finance_full_name" varchar(80),
  "phone_number" varchar(50),
  "email_address" varchar(150),
  "pin" varchar(22),
  "receipt_number" varchar(80),
  "is_blocked" bool DEFAULT '0',
  "created_by" varchar(80) NOT NULL,
  "created_on" TIMESTAMP NOT NULL DEFAULT 'now()',
  "modified_on" TIMESTAMP NOT NULL DEFAULT 'now()',
  "modified_by" varchar(80) NOT NULL
);

CREATE TABLE "core"."finance_bank_pin_sales" (
  "bank_pin_sale_id" varchar(22) PRIMARY KEY,
  "bank_pin_sale_sid" INT GENERATED BY DEFAULT AS IDENTITY,
  "pin" varchar(20) NOT NULL,
  "bank_id" varchar(22),
  "bank_account_id" varchar(22),
  "receipt_number" varchar(100),
  "college_id" varchar(50),
  "pin_cost" int,
  "appliant_full_name" varchar(250),
  "phone_number" varchar(50),
  "email_address" varchar(150),
  "transaction_date" datetime,
  "created_by" varchar(80) NOT NULL,
  "created_on" TIMESTAMP NOT NULL DEFAULT 'now()',
  "modified_on" TIMESTAMP NOT NULL DEFAULT 'now()',
  "modified_by" varchar(80) NOT NULL
);

CREATE TABLE "core"."email_settings" (
  "email_setting_id" varchar(22),
  "email_setting_sid" INT GENERATED BY DEFAULT AS IDENTITY,
  "tenant_id" varchar(22),
  "email_smtp_server" text,
  "email_smtp_email" text,
  "email_smtp_username" text,
  "email_smtp_password" text,
  "email_smtp_ssl_port" text,
  "email_smtp_tls_port" text,
  "email_smtp_is_ssl" bool DEFAULT 'yes',
  "email_smtp_is_tls" bool DEFAULT 'yes',
  "email_smtp_authentication" bool DEFAULT 'yes',
  "email_smtp_full_name" text,
  "created_by" varchar(80) NOT NULL,
  "created_on" TIMESTAMP NOT NULL DEFAULT 'now()',
  "modified_on" TIMESTAMP NOT NULL DEFAULT 'now()',
  "modified_by" varchar(80) NOT NULL,
  PRIMARY KEY ("email_setting_id", "tenant_id")
);

CREATE TABLE "core"."sms_settings" (
  "sms_setting_id" varchar(22),
  "sms_setting_sid" INT GENERATED BY DEFAULT AS IDENTITY,
  "tenant_id" varchar(22),
  "sms_authorization_endpoint" text,
  "sms_authorization_key" text,
  "sms_authorization_sender" text,
  "sms_authorization_api_key" text,
  "created_by" varchar(80) NOT NULL,
  "created_on" TIMESTAMP NOT NULL DEFAULT 'now()',
  "modified_on" TIMESTAMP NOT NULL DEFAULT 'now()',
  "modified_by" varchar(80) NOT NULL,
  PRIMARY KEY ("sms_setting_id", "tenant_id")
);

CREATE TABLE "core"."whatsapp_settings" (
  "whatsapp_setting_id" varchar(22),
  "whatsapp_setting_sid" INT GENERATED BY DEFAULT AS IDENTITY,
  "tenant_id" varchar(22),
  "created_by" varchar(80) NOT NULL,
  "created_on" TIMESTAMP NOT NULL DEFAULT 'now()',
  "modified_on" TIMESTAMP NOT NULL DEFAULT 'now()',
  "modified_by" varchar(80) NOT NULL,
  PRIMARY KEY ("whatsapp_setting_id", "tenant_id")
);

CREATE TABLE "core"."social_settings" (
  "social_setting_id" varchar(22),
  "social_setting_sid" INT GENERATED BY DEFAULT AS IDENTITY,
  "tenant_id" varchar(22),
  "social_login_google" text,
  "social_login_facebook" text,
  "social_login_linkedin" text,
  "social_login_microsoft" text,
  "created_by" varchar(80) NOT NULL,
  "created_on" TIMESTAMP NOT NULL DEFAULT 'now()',
  "modified_on" TIMESTAMP NOT NULL DEFAULT 'now()',
  "modified_by" varchar(80) NOT NULL,
  PRIMARY KEY ("social_setting_id", "tenant_id")
);

CREATE TABLE "core"."api_access_settings" (
  "api_access_setting_id" varchar(22),
  "api_access_setting_sid" INT GENERATED BY DEFAULT AS IDENTITY,
  "tenant_id" varchar(22),
  "created_by" varchar(80) NOT NULL,
  "created_on" TIMESTAMP NOT NULL DEFAULT 'now()',
  "modified_on" TIMESTAMP NOT NULL DEFAULT 'now()',
  "modified_by" varchar(80) NOT NULL,
  PRIMARY KEY ("api_access_setting_id", "tenant_id")
);

CREATE TABLE "core"."analytic_settings" (
  "analytic_setting_id" varchar(22),
  "analytic_setting_sid" INT GENERATED BY DEFAULT AS IDENTITY,
  "tenant_id" varchar(22),
  "analytic_code" text,
  "analytic_other" json,
  "created_by" varchar(80) NOT NULL,
  "created_on" TIMESTAMP NOT NULL DEFAULT 'now()',
  "modified_on" TIMESTAMP NOT NULL DEFAULT 'now()',
  "modified_by" varchar(80) NOT NULL,
  PRIMARY KEY ("analytic_setting_id", "tenant_id")
);

CREATE TABLE "core"."audit_logs" (
  "audit_log_id" varchar(22) PRIMARY KEY,
  "audit_log_sid" INT GENERATED BY DEFAULT AS IDENTITY,
  "tenant_id" varchar(22),
  "table_name" TEXT NOT NULL,
  "record_id" TEXT NOT NULL,
  "action" TEXT NOT NULL,
  "old_data" JSONB,
  "new_data" JSONB,
  "change_by_login_ip" text,
  "created_by" varchar(80) NOT NULL,
  "created_on" TIMESTAMP NOT NULL DEFAULT 'now()',
  "modified_on" TIMESTAMP NOT NULL DEFAULT 'now()',
  "modified_by" varchar(80) NOT NULL
);

CREATE TABLE "core"."sms_logs" (
  "sms_log_id" varchar(22) PRIMARY KEY,
  "sms_log_sid" INT GENERATED BY DEFAULT AS IDENTITY,
  "tenant_id" varchar(22),
  "sender_number" varchar(20) NOT NULL,
  "recipient_number" varchar(20) NOT NULL,
  "send_user_id" varchar(22),
  "recipent_user_id" varchar(22),
  "sms_message_sent" JSONB,
  "change_by_login_ip" text,
  "created_by" varchar(80) NOT NULL,
  "created_on" TIMESTAMP NOT NULL DEFAULT 'now()',
  "modified_on" TIMESTAMP NOT NULL DEFAULT 'now()',
  "modified_by" varchar(80) NOT NULL
);

CREATE TABLE "core"."email_logs" (
  "email_log_id" varchar(22) PRIMARY KEY,
  "email_log_sid" INT GENERATED BY DEFAULT AS IDENTITY,
  "tenant_id" varchar(22),
  "sender_email" varchar(254) NOT NULL,
  "recipient_email" varchar(254) NOT NULL,
  "send_user_id" varchar(22),
  "recipent_user_id" varchar(22),
  "email_message_sent" JSONB,
  "change_by_login_ip" text,
  "created_by" varchar(80) NOT NULL,
  "created_on" TIMESTAMP NOT NULL DEFAULT 'now()',
  "modified_on" TIMESTAMP NOT NULL DEFAULT 'now()',
  "modified_by" varchar(80) NOT NULL
);

CREATE TABLE "core"."whatsapp_logs" (
  "whatsapp_log_id" varchar(22) PRIMARY KEY,
  "whatsapp_log_sid" INT GENERATED BY DEFAULT AS IDENTITY,
  "tenant_id" varchar(22),
  "sender_whatsapp" varchar(254) NOT NULL,
  "recipient_whatsapp" varchar(254) NOT NULL,
  "send_user_id" varchar(22),
  "recipent_user_id" varchar(22),
  "whatsapp_message_sent" JSONB,
  "change_by_login_ip" text,
  "created_by" varchar(80) NOT NULL,
  "created_on" TIMESTAMP NOT NULL DEFAULT 'now()',
  "modified_on" TIMESTAMP NOT NULL DEFAULT 'now()',
  "modified_by" varchar(80) NOT NULL
);

CREATE TABLE "core"."user_types" (
  "user_type_id" varchar(22) PRIMARY KEY,
  "user_type_sid" INT GENERATED BY DEFAULT AS IDENTITY UNIQUE NOT NULL,
  "user_type_name" varchar(80) NOT NULL,
  "created_by" varchar(80) NOT NULL,
  "created_on" TIMESTAMP NOT NULL DEFAULT 'now()',
  "modified_on" TIMESTAMP NOT NULL DEFAULT 'now()',
  "modified_by" varchar(80) NOT NULL
);

CREATE TABLE "core"."tenant_academic_years" (
  "tenant_academic_year_id" varchar(22) PRIMARY KEY,
  "tenant_academic_year_sid" INT GENERATED BY DEFAULT AS IDENTITY UNIQUE NOT NULL,
  "tenant_academic_year_name" varchar(80) NOT NULL,
  "created_by" varchar(80) NOT NULL,
  "created_on" TIMESTAMP NOT NULL DEFAULT 'now()',
  "modified_on" TIMESTAMP NOT NULL DEFAULT 'now()',
  "modified_by" varchar(80) NOT NULL
);

CREATE TABLE "core"."tenant_academic_semesters" (
  "tenant_academic_semester_id" varchar(22) PRIMARY KEY,
  "tenant_academic_semester_sid" INT GENERATED BY DEFAULT AS IDENTITY UNIQUE NOT NULL,
  "tenant_academic_year_id" varchar(22),
  "tenant_academic_semester_name" varchar(80) NOT NULL,
  "created_by" varchar(80) NOT NULL,
  "created_on" TIMESTAMP NOT NULL DEFAULT 'now()',
  "modified_on" TIMESTAMP NOT NULL DEFAULT 'now()',
  "modified_by" varchar(80) NOT NULL
);

CREATE TABLE "core"."tenant_account_types" (
  "tenant_account_type_id" varchar(22) PRIMARY KEY,
  "tenant_account_type_sid" INT GENERATED BY DEFAULT AS IDENTITY UNIQUE NOT NULL,
  "name" varchar(80) NOT NULL,
  "created_by" varchar(80) NOT NULL,
  "created_on" TIMESTAMP NOT NULL DEFAULT 'now()',
  "modified_on" TIMESTAMP NOT NULL DEFAULT 'now()',
  "modified_by" varchar(80) NOT NULL
);

CREATE TABLE "core"."admin_regions" (
  "african_admin_region_id" varchar(22) PRIMARY KEY,
  "african_admin_region_sid" INT GENERATED BY DEFAULT AS IDENTITY UNIQUE NOT NULL,
  "country_id" varchar(22),
  "state_id" varchar(80) NOT NULL,
  "region_id" varchar(80) NOT NULL,
  "district_id" varchar(80) NOT NULL,
  "state_name" varchar(80) NOT NULL,
  "region_name" varchar(80) NOT NULL,
  "district_name" varchar(80) NOT NULL,
  "created_by" varchar(80) NOT NULL,
  "created_on" TIMESTAMP NOT NULL DEFAULT 'now()',
  "modified_on" TIMESTAMP NOT NULL DEFAULT 'now()',
  "modified_by" varchar(80) NOT NULL
);

CREATE TABLE "core"."address_types" (
  "address_type_id" varchar(22) PRIMARY KEY,
  "address_type_sid" INT GENERATED BY DEFAULT AS IDENTITY UNIQUE NOT NULL,
  "address_type_name" varchar(80) NOT NULL,
  "created_by" varchar(80) NOT NULL,
  "created_on" TIMESTAMP NOT NULL DEFAULT 'now()',
  "modified_on" TIMESTAMP NOT NULL DEFAULT 'now()',
  "modified_by" varchar(80) NOT NULL
);

CREATE TABLE "core"."phone_types" (
  "phone_type_id" varchar(22) PRIMARY KEY,
  "phone_type_sid" INT GENERATED BY DEFAULT AS IDENTITY UNIQUE NOT NULL,
  "phone_type_name" varchar(80) NOT NULL,
  "created_by" varchar(80) NOT NULL,
  "created_on" TIMESTAMP NOT NULL DEFAULT 'now()',
  "modified_on" TIMESTAMP NOT NULL DEFAULT 'now()',
  "modified_by" varchar(80) NOT NULL
);

CREATE TABLE "core"."email_types" (
  "email_type_id" varchar(22) PRIMARY KEY,
  "email_type_sid" INT GENERATED BY DEFAULT AS IDENTITY UNIQUE NOT NULL,
  "email_type_name" varchar(80) NOT NULL,
  "created_by" varchar(80) NOT NULL,
  "created_on" TIMESTAMP NOT NULL DEFAULT 'now()',
  "modified_on" TIMESTAMP NOT NULL DEFAULT 'now()',
  "modified_by" varchar(80) NOT NULL
);

CREATE TABLE "core"."social_types" (
  "social_type_id" varchar(22) PRIMARY KEY,
  "social_type_sid" INT GENERATED BY DEFAULT AS IDENTITY UNIQUE NOT NULL,
  "social_type_name" varchar(80) NOT NULL,
  "created_by" varchar(80) NOT NULL,
  "created_on" TIMESTAMP NOT NULL DEFAULT 'now()',
  "modified_on" TIMESTAMP NOT NULL DEFAULT 'now()',
  "modified_by" varchar(80) NOT NULL
);

CREATE TABLE "core"."education_categories" (
  "education_category_id" varchar(22) PRIMARY KEY,
  "education_category_type_sid" INT GENERATED BY DEFAULT AS IDENTITY UNIQUE NOT NULL,
  "category_name" varchar(80) NOT NULL,
  "created_by" varchar(80) NOT NULL,
  "created_on" TIMESTAMP NOT NULL DEFAULT 'now()',
  "modified_on" TIMESTAMP NOT NULL DEFAULT 'now()',
  "modified_by" varchar(80) NOT NULL
);

CREATE TABLE "core"."classifications" (
  "education_classification_id" varchar(22) PRIMARY KEY,
  "education_classification_type_sid" INT GENERATED BY DEFAULT AS IDENTITY UNIQUE NOT NULL,
  "classification_name" varchar(80) NOT NULL,
  "created_by" varchar(80) NOT NULL,
  "created_on" TIMESTAMP NOT NULL DEFAULT 'now()',
  "modified_on" TIMESTAMP NOT NULL DEFAULT 'now()',
  "modified_by" varchar(80) NOT NULL
);

CREATE TABLE "core"."education_affiliations" (
  "education_affiliation_id" varchar(22) PRIMARY KEY,
  "education_affiliation_type_sid" INT GENERATED BY DEFAULT AS IDENTITY UNIQUE NOT NULL,
  "affiliation_name" varchar(80) NOT NULL,
  "created_by" varchar(80) NOT NULL,
  "created_on" TIMESTAMP NOT NULL DEFAULT 'now()',
  "modified_on" TIMESTAMP NOT NULL DEFAULT 'now()',
  "modified_by" varchar(80) NOT NULL
);

CREATE TABLE "core"."education_associations" (
  "education_association_id" varchar(22) PRIMARY KEY,
  "education_association_type_sid" INT GENERATED BY DEFAULT AS IDENTITY UNIQUE NOT NULL,
  "association_name" varchar(80) NOT NULL,
  "created_by" varchar(80) NOT NULL,
  "created_on" TIMESTAMP NOT NULL DEFAULT 'now()',
  "modified_on" TIMESTAMP NOT NULL DEFAULT 'now()',
  "modified_by" varchar(80) NOT NULL
);

CREATE TABLE "core"."education_grade_levels" (
  "education_grade_level_id" varchar(22) PRIMARY KEY,
  "education_grade_level_type_sid" INT GENERATED BY DEFAULT AS IDENTITY UNIQUE NOT NULL,
  "grade_level_name" varchar(80) NOT NULL,
  "created_by" varchar(80) NOT NULL,
  "created_on" TIMESTAMP NOT NULL DEFAULT 'now()',
  "modified_on" TIMESTAMP NOT NULL DEFAULT 'now()',
  "modified_by" varchar(80) NOT NULL
);

CREATE TABLE "core"."countries" (
  "country_id" varchar(22) PRIMARY KEY,
  "country_sid" INT GENERATED BY DEFAULT AS IDENTITY UNIQUE NOT NULL,
  "country_name" varchar(22),
  "iso_alpha_2" varchar(5) NOT NULL,
  "iso_alpha_3" varchar(5) NOT NULL,
  "iso_3166_2" varchar(10) NOT NULL,
  "calling_code" varchar(10) NOT NULL,
  "capital_city" varchar(80) NOT NULL,
  "language_code" varchar(12) NOT NULL,
  "timezone" varchar(40) NOT NULL,
  "currency_code" varchar(5) NOT NULL,
  "region" varchar(10) NOT NULL,
  "sub_region" varchar(40) NOT NULL,
  "intermediate_region" varchar(20) NOT NULL,
  "region_code" varchar(5) NOT NULL,
  "sub_region_code" varchar(5) NOT NULL,
  "intermediate_region_code" varchar(5) NOT NULL,
  "created_by" varchar(80) NOT NULL,
  "created_on" TIMESTAMP NOT NULL DEFAULT 'now()',
  "modified_on" TIMESTAMP NOT NULL DEFAULT 'now()',
  "modified_by" varchar(80) NOT NULL
);

CREATE INDEX ON "core"."tenants" ("tenant_sid", "tenant_name");

CREATE INDEX ON "core"."tenant_subscriptions" ("subscription_name");

CREATE INDEX ON "core"."contacts" ("first_name", "last_name", "company_name", "gender");

CREATE INDEX ON "core"."users" ("user_id", "display_name", "email", "primary_phone");

CREATE INDEX ON "core"."finance_banks" ("bank_name", "bank_email");

CREATE INDEX idx_tenant_settings_tenant ON "core"."tenant_settings" ("tenant_id");
CREATE INDEX idx_users_tenant ON "core"."users" ("tenant_id");

COMMENT ON TABLE "core"."tenants" IS 'Stores tenant data. 
A tenenat is created by TpGroup Employee after the potential tenant show interest online or offline. 
';

COMMENT ON TABLE "core"."tenant_subscriptions" IS 'Stores tenant subscription and entitlements. 
';

COMMENT ON TABLE "core"."tenant_settings" IS 'Stores tenant specific settings. These are used to customize the app for the tenant. 
';

COMMENT ON TABLE "core"."user_types" IS 'Reference table for tenant account type';

COMMENT ON TABLE "core"."tenant_academic_years" IS 'Reference table for tenant account type';

COMMENT ON TABLE "core"."tenant_academic_semesters" IS 'Reference table for tenant account type';

COMMENT ON TABLE "core"."tenant_account_types" IS 'Reference table for tenant account type';

COMMENT ON TABLE "core"."admin_regions" IS 'Reference table for tenant account type';

COMMENT ON TABLE "core"."address_types" IS 'Reference table for tenant address_types';

COMMENT ON TABLE "core"."phone_types" IS 'Reference table for phone_types';

COMMENT ON TABLE "core"."email_types" IS 'Reference table for email_types';

COMMENT ON TABLE "core"."social_types" IS 'Reference table for social_types';

COMMENT ON TABLE "core"."education_categories" IS 'Reference table for education_categories';

COMMENT ON TABLE "core"."classifications" IS 'Reference table for classifications';

COMMENT ON TABLE "core"."education_affiliations" IS 'Reference table for education_affiliations';

COMMENT ON TABLE "core"."education_associations" IS 'Reference table for education_associations';

COMMENT ON TABLE "core"."education_grade_levels" IS 'Reference table for education_grade_levels';

COMMENT ON TABLE "core"."countries" IS 'Reference table for country - https://github.com/lukes/ISO-3166-Countries-with-Regional-Codes/blob/master/all/all.csv';

ALTER TABLE "core"."tenants" ADD FOREIGN KEY ("tenant_account_type_id") REFERENCES "core"."tenant_account_types" ("tenant_account_type_id");

ALTER TABLE "core"."tenants" ADD FOREIGN KEY ("tenant_subscription_id") REFERENCES "core"."tenant_subscriptions" ("tenant_subscription_id");

ALTER TABLE "core"."tenants" ADD FOREIGN KEY ("tenant_user_id") REFERENCES "core"."users" ("user_id");

ALTER TABLE "core"."tenant_subscriptions" ADD FOREIGN KEY ("tenant_id") REFERENCES "core"."tenants" ("tenant_id");

ALTER TABLE "core"."tenant_settings" ADD FOREIGN KEY ("tenant_id") REFERENCES "core"."tenants" ("tenant_id");

ALTER TABLE "core"."tenant_settings" ADD FOREIGN KEY ("tenant_academic_year_id") REFERENCES "core"."tenant_academic_years" ("tenant_academic_year_id");

ALTER TABLE "core"."tenant_settings" ADD FOREIGN KEY ("tenant_academic_semester_id") REFERENCES "core"."tenant_academic_semesters" ("tenant_academic_semester_id");

ALTER TABLE "core"."tenant_settings" ADD FOREIGN KEY ("finance_settings") REFERENCES "core"."finance_settings" ("finance_setting_id");

ALTER TABLE "core"."tenant_settings" ADD FOREIGN KEY ("finance_bank_settings") REFERENCES "core"."finance_banks" ("bank_id");

ALTER TABLE "core"."tenant_settings" ADD FOREIGN KEY ("finance_bank_account_settings") REFERENCES "core"."finance_bank_accounts" ("bank_account_id");

ALTER TABLE "core"."tenant_settings" ADD FOREIGN KEY ("finance_payment_type_settings") REFERENCES "core"."finance_payment_types" ("payment_type_id");

ALTER TABLE "core"."tenant_settings" ADD FOREIGN KEY ("finance_payment_method_settings") REFERENCES "core"."finance_payment_methods" ("payment_method_id");

ALTER TABLE "core"."tenant_settings" ADD FOREIGN KEY ("tenant_college_settings") REFERENCES "core"."tenant_colleges" ("college_id");

ALTER TABLE "core"."tenant_settings" ADD FOREIGN KEY ("college_campus_location_settings") REFERENCES "core"."college_campus_locations" ("college_campus_id");

ALTER TABLE "core"."tenant_settings" ADD FOREIGN KEY ("signature_settings") REFERENCES "core"."signatures" ("signature_id");

ALTER TABLE "core"."tenant_settings" ADD FOREIGN KEY ("facultie_settings") REFERENCES "core"."faculties" ("faculty_id");

ALTER TABLE "core"."tenant_settings" ADD FOREIGN KEY ("department_settings") REFERENCES "core"."departments" ("department_id");

ALTER TABLE "core"."tenant_settings" ADD FOREIGN KEY ("email_setting_id") REFERENCES "core"."email_settings" ("email_setting_id");

ALTER TABLE "core"."tenant_settings" ADD FOREIGN KEY ("sms_setting_id") REFERENCES "core"."sms_settings" ("sms_setting_id");

ALTER TABLE "core"."tenant_settings" ADD FOREIGN KEY ("whatsapp_setting_id") REFERENCES "core"."whatsapp_settings" ("whatsapp_setting_id");

ALTER TABLE "core"."tenant_settings" ADD FOREIGN KEY ("social_setting_id") REFERENCES "core"."social_settings" ("social_setting_id");

ALTER TABLE "core"."tenant_settings" ADD FOREIGN KEY ("api_access_setting_id") REFERENCES "core"."api_access_settings" ("api_access_setting_id");

ALTER TABLE "core"."tenant_settings" ADD FOREIGN KEY ("country_id") REFERENCES "core"."countries" ("country_id");

ALTER TABLE "core"."tenant_data" ADD FOREIGN KEY ("tenant_id") REFERENCES "core"."tenants" ("tenant_id");

ALTER TABLE "core"."contacts" ADD FOREIGN KEY ("tenant_id") REFERENCES "core"."tenants" ("tenant_id");

ALTER TABLE "core"."contacts" ADD FOREIGN KEY ("contact_email_id") REFERENCES "core"."contacts_email" ("contact_email_id");

ALTER TABLE "core"."contacts" ADD FOREIGN KEY ("contact_phone_id") REFERENCES "core"."contacts_phone" ("contact_phone_id");

ALTER TABLE "core"."contacts" ADD FOREIGN KEY ("contact_address_id") REFERENCES "core"."contacts_address" ("contact_address_id");

ALTER TABLE "core"."contacts" ADD FOREIGN KEY ("contact_social_id") REFERENCES "core"."contacts_social" ("contact_social_id");

ALTER TABLE "core"."contacts_email" ADD FOREIGN KEY ("tenant_id") REFERENCES "core"."tenants" ("tenant_id");

ALTER TABLE "core"."contacts_email" ADD FOREIGN KEY ("contact_id") REFERENCES "core"."contacts" ("contact_id");

ALTER TABLE "core"."contacts_phone" ADD FOREIGN KEY ("tenant_id") REFERENCES "core"."tenants" ("tenant_id");

ALTER TABLE "core"."contacts_phone" ADD FOREIGN KEY ("contact_id") REFERENCES "core"."contacts" ("contact_id");

ALTER TABLE "core"."contacts_address" ADD FOREIGN KEY ("tenant_id") REFERENCES "core"."tenants" ("tenant_id");

ALTER TABLE "core"."contacts_address" ADD FOREIGN KEY ("contact_id") REFERENCES "core"."contacts" ("contact_id");

ALTER TABLE "core"."contacts_social" ADD FOREIGN KEY ("tenant_id") REFERENCES "core"."tenants" ("tenant_id");

ALTER TABLE "core"."contacts_social" ADD FOREIGN KEY ("contact_id") REFERENCES "core"."contacts" ("contact_id");

ALTER TABLE "core"."users" ADD FOREIGN KEY ("tenant_id") REFERENCES "core"."tenants" ("tenant_id");

ALTER TABLE "core"."users" ADD FOREIGN KEY ("user_type_id") REFERENCES "core"."user_types" ("user_type_id");

ALTER TABLE "core"."users" ADD FOREIGN KEY ("user_payment_id") REFERENCES "core"."user_payments" ("user_payment_id");

ALTER TABLE "core"."user_data" ADD FOREIGN KEY ("user_id") REFERENCES "core"."users" ("user_id");

ALTER TABLE "core"."user_data" ADD FOREIGN KEY ("tenant_id") REFERENCES "core"."tenants" ("tenant_id");

ALTER TABLE "core"."user_settings" ADD FOREIGN KEY ("user_id") REFERENCES "core"."users" ("user_id");

ALTER TABLE "core"."user_settings" ADD FOREIGN KEY ("tenant_id") REFERENCES "core"."tenants" ("tenant_id");

ALTER TABLE "core"."roles" ADD FOREIGN KEY ("tenant_id") REFERENCES "core"."tenants" ("tenant_id");

ALTER TABLE "core"."user_roles" ADD FOREIGN KEY ("user_role_id") REFERENCES "core"."users" ("user_id");

ALTER TABLE "core"."user_roles" ADD FOREIGN KEY ("role_id") REFERENCES "core"."roles" ("role_id");

ALTER TABLE "core"."user_roles" ADD FOREIGN KEY ("tenant_id") REFERENCES "core"."tenants" ("tenant_id");

ALTER TABLE "core"."user_auths" ADD FOREIGN KEY ("user_id") REFERENCES "core"."users" ("user_id");

ALTER TABLE "core"."user_auths" ADD FOREIGN KEY ("tenant_id") REFERENCES "core"."tenants" ("tenant_id");

ALTER TABLE "core"."user_payments" ADD FOREIGN KEY ("user_id") REFERENCES "core"."users" ("user_id");

ALTER TABLE "core"."user_payments" ADD FOREIGN KEY ("tenant_id") REFERENCES "core"."tenants" ("tenant_id");

ALTER TABLE "core"."settings" ADD FOREIGN KEY ("tenant_id") REFERENCES "core"."tenants" ("tenant_id");

ALTER TABLE "core"."settings" ADD FOREIGN KEY ("tenant_setting_id") REFERENCES "core"."tenant_settings" ("tenant_setting_id");

ALTER TABLE "core"."tenant_colleges" ADD FOREIGN KEY ("tenant_id") REFERENCES "core"."tenants" ("tenant_id");

ALTER TABLE "core"."tenant_colleges" ADD FOREIGN KEY ("contact_email_id") REFERENCES "core"."contacts_email" ("contact_email_id");

ALTER TABLE "core"."tenant_colleges" ADD FOREIGN KEY ("contact_phone_id") REFERENCES "core"."contacts_phone" ("contact_phone_id");

ALTER TABLE "core"."tenant_colleges" ADD FOREIGN KEY ("contact_address_id") REFERENCES "core"."contacts_address" ("contact_address_id");

ALTER TABLE "core"."tenant_colleges" ADD FOREIGN KEY ("contact_social_id") REFERENCES "core"."contacts_social" ("contact_social_id");

ALTER TABLE "core"."college_campus_locations" ADD FOREIGN KEY ("college_id") REFERENCES "core"."tenant_colleges" ("college_id");

ALTER TABLE "core"."college_campus_locations" ADD FOREIGN KEY ("tenant_id") REFERENCES "core"."tenants" ("tenant_id");

ALTER TABLE "core"."signatures" ADD FOREIGN KEY ("college_id") REFERENCES "core"."tenant_colleges" ("college_id");

ALTER TABLE "core"."signatures" ADD FOREIGN KEY ("faculty_id") REFERENCES "core"."faculties" ("faculty_id");

ALTER TABLE "core"."signatures" ADD FOREIGN KEY ("college_campus_id") REFERENCES "core"."college_campus_locations" ("college_campus_id");

ALTER TABLE "core"."signatures" ADD FOREIGN KEY ("tenant_id") REFERENCES "core"."tenants" ("tenant_id");

ALTER TABLE "core"."signatures" ADD FOREIGN KEY ("academic_year") REFERENCES "core"."tenant_academic_years" ("tenant_academic_year_id");

ALTER TABLE "core"."faculties" ADD FOREIGN KEY ("college_id") REFERENCES "core"."tenant_colleges" ("college_id");

ALTER TABLE "core"."faculties" ADD FOREIGN KEY ("tenant_id") REFERENCES "core"."tenants" ("tenant_id");

ALTER TABLE "core"."departments" ADD FOREIGN KEY ("college_id") REFERENCES "core"."tenant_colleges" ("college_id");

ALTER TABLE "core"."departments" ADD FOREIGN KEY ("tenant_id") REFERENCES "core"."tenants" ("tenant_id");

ALTER TABLE "core"."finance_settings" ADD FOREIGN KEY ("tenant_id") REFERENCES "core"."tenants" ("tenant_id");

ALTER TABLE "core"."finance_bank_accounts" ADD FOREIGN KEY ("tenant_id") REFERENCES "core"."tenants" ("tenant_id");

ALTER TABLE "core"."finance_bank_accounts" ADD FOREIGN KEY ("bank_name_id") REFERENCES "core"."finance_banks" ("bank_id");

ALTER TABLE "core"."finance_bank_accounts" ADD FOREIGN KEY ("college_id") REFERENCES "core"."tenant_colleges" ("college_id");

ALTER TABLE "core"."finance_banks" ADD FOREIGN KEY ("tenant_id") REFERENCES "core"."tenants" ("tenant_id");

ALTER TABLE "core"."finance_payments" ADD FOREIGN KEY ("tenant_id") REFERENCES "core"."tenants" ("tenant_id");

ALTER TABLE "core"."finance_payments" ADD FOREIGN KEY ("user_id") REFERENCES "core"."users" ("user_id");

ALTER TABLE "core"."finance_payments" ADD FOREIGN KEY ("payment_type") REFERENCES "core"."finance_payment_types" ("payment_type_id");

ALTER TABLE "core"."finance_payments" ADD FOREIGN KEY ("payment_academic_year") REFERENCES "core"."tenant_academic_years" ("tenant_academic_year_id");

ALTER TABLE "core"."finance_payment_types" ADD FOREIGN KEY ("tenant_id") REFERENCES "core"."tenants" ("tenant_id");

ALTER TABLE "core"."finance_payment_types" ADD FOREIGN KEY ("user_id") REFERENCES "core"."users" ("user_id");

ALTER TABLE "core"."finance_payment_types" ADD FOREIGN KEY ("payment_id") REFERENCES "core"."finance_payments" ("payment_id");

ALTER TABLE "core"."finance_payment_methods" ADD FOREIGN KEY ("tenant_id") REFERENCES "core"."tenants" ("tenant_id");

ALTER TABLE "core"."finance_payment_methods" ADD FOREIGN KEY ("user_id") REFERENCES "core"."users" ("user_id");

ALTER TABLE "core"."finance_payment_methods" ADD FOREIGN KEY ("payment_id") REFERENCES "core"."finance_payments" ("payment_id");

ALTER TABLE "core"."finance_bank_vouchers" ADD FOREIGN KEY ("tenant_id") REFERENCES "core"."tenants" ("tenant_id");

ALTER TABLE "core"."finance_bank_vouchers" ADD FOREIGN KEY ("payment_id") REFERENCES "core"."finance_payments" ("payment_id");

ALTER TABLE "core"."finance_bank_vouchers" ADD FOREIGN KEY ("payment_method_id") REFERENCES "core"."finance_payment_methods" ("payment_method_id");

ALTER TABLE "core"."finance_bank_vouchers" ADD FOREIGN KEY ("user_id") REFERENCES "core"."users" ("user_id");

ALTER TABLE "core"."finance_bank_pins" ADD FOREIGN KEY ("tenant_id") REFERENCES "core"."tenants" ("tenant_id");

ALTER TABLE "core"."finance_bank_pins" ADD FOREIGN KEY ("payment_id") REFERENCES "core"."finance_payments" ("payment_id");

ALTER TABLE "core"."finance_bank_pins" ADD FOREIGN KEY ("payment_method_id") REFERENCES "core"."finance_payment_methods" ("payment_method_id");

ALTER TABLE "core"."finance_bank_pins" ADD FOREIGN KEY ("user_id") REFERENCES "core"."users" ("user_id");

ALTER TABLE "core"."email_settings" ADD FOREIGN KEY ("tenant_id") REFERENCES "core"."tenants" ("tenant_id");

ALTER TABLE "core"."sms_settings" ADD FOREIGN KEY ("tenant_id") REFERENCES "core"."tenants" ("tenant_id");

ALTER TABLE "core"."whatsapp_settings" ADD FOREIGN KEY ("tenant_id") REFERENCES "core"."tenants" ("tenant_id");

ALTER TABLE "core"."social_settings" ADD FOREIGN KEY ("tenant_id") REFERENCES "core"."tenants" ("tenant_id");

ALTER TABLE "core"."api_access_settings" ADD FOREIGN KEY ("tenant_id") REFERENCES "core"."tenants" ("tenant_id");

ALTER TABLE "core"."analytic_settings" ADD FOREIGN KEY ("tenant_id") REFERENCES "core"."tenants" ("tenant_id");

ALTER TABLE "core"."sms_logs" ADD FOREIGN KEY ("send_user_id") REFERENCES "core"."users" ("user_id");

ALTER TABLE "core"."sms_logs" ADD FOREIGN KEY ("recipent_user_id") REFERENCES "core"."users" ("user_id");

ALTER TABLE "core"."email_logs" ADD FOREIGN KEY ("send_user_id") REFERENCES "core"."users" ("user_id");

ALTER TABLE "core"."email_logs" ADD FOREIGN KEY ("recipent_user_id") REFERENCES "core"."users" ("user_id");

ALTER TABLE "core"."whatsapp_logs" ADD FOREIGN KEY ("send_user_id") REFERENCES "core"."users" ("user_id");

ALTER TABLE "core"."whatsapp_logs" ADD FOREIGN KEY ("recipent_user_id") REFERENCES "core"."users" ("user_id");

ALTER TABLE "core"."tenant_academic_semesters" ADD FOREIGN KEY ("tenant_academic_year_id") REFERENCES "core"."tenant_academic_years" ("tenant_academic_year_id");

ALTER TABLE "core"."admin_regions" ADD FOREIGN KEY ("country_id") REFERENCES "core"."countries" ("country_id");

-- Create policy function
CREATE OR REPLACE FUNCTION core.get_tenant_id()
RETURNS VARCHAR AS $$
BEGIN
  RETURN NULLIF(current_setting('app.tenant_id', TRUE), '');
END;
$$ LANGUAGE plpgsql;

-- Enable RLS on tables
ALTER TABLE core.tenants ENABLE ROW LEVEL SECURITY;
ALTER TABLE core.users ENABLE ROW LEVEL SECURITY;
ALTER TABLE core.roles ENABLE ROW LEVEL SECURITY;
ALTER TABLE core.contacts ENABLE ROW LEVEL SECURITY;
-- Add RLS for other tables as needed

-- Create policies
CREATE POLICY tenant_isolation_policy ON core.users 
  FOR ALL
  USING (tenant_id = core.get_tenant_id() OR core.get_tenant_id() IS NULL);

CREATE POLICY tenant_isolation_policy ON core.roles
  FOR ALL 
  USING (tenant_id = core.get_tenant_id() OR core.get_tenant_id() IS NULL);

CREATE POLICY tenant_isolation_policy ON core.contacts
  FOR ALL
  USING (tenant_id = core.get_tenant_id() OR core.get_tenant_id() IS NULL);

-- Add similar policies for other tables
